<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<!-- START SNIPPET: e1 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<context:property-placeholder
		location="classpath:camel.properties,classpath:application.properties"
		ignore-resource-not-found="true" />
	<context:component-scan base-package="example.client" />
	<camel:camelContext id="camel-client">
		<camel:propertyPlaceholder id="camelProperties"
			location="classpath:camel.properties" />
		<camel:jmxAgent id="agent" createConnector="true" />
		<camel:template id="camelTemplate" />
		
		<camel:route id="input" autoStartup="false">
			<camel:from uri="file:{{exchange.rate.directory}}" />
			<camel:to uri="direct:processing"/>
		</camel:route>
		
		<camel:route id="batchPersistRoute">
			<camel:from uri="direct:processing"/>
			<camel:split streaming="true" parallelProcessing="true">
				<camel:tokenize token="\r\n|\n" xml="false" trim="true"/>
				<!-- <camel:log message="${body}" loggingLevel="DEBUG"/> -->
				<camel:filter>
					<camel:simple>${body} starts with &#39;DATE&#39;</camel:simple>
					<camel:log message="FILTERED:: ${body}" loggingLevel="INFO"/>
					<camel:stop />
				</camel:filter>
				<camel:bean ref="toMap" />
				<camel:to uri="direct:output"></camel:to>
			</camel:split>
		</camel:route>
		
		<camel:route id="aggregateRoute">
			<camel:from uri="direct:aggregate" />
			<camel:aggregate strategyRef="listAggregationStrategy"
				completionTimeout="5000" completionSize="1000">
				<camel:correlationExpression>
					<camel:constant>true</camel:constant>
				</camel:correlationExpression>
				<camel:to uri="direct:output"/>
			</camel:aggregate>
		</camel:route>
		
		<camel:route id="output">
			<camel:from uri="direct:output"/>
			<camel:to
					uri="mongodb:mongoBean?database=${mongodb.database}&amp;collection=${mongodb.collection}&amp;operation=insert" />
			<camel:log message="Commit completed" loggingLevel="INFO"/>
		</camel:route>
	</camel:camelContext>

	<!-- Camel JMSProducer to be able to send messages to a remote Active MQ 
		server -->
	<bean id="jms" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.spring.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://${tcp.host}:${tcp.port}" />
			</bean>
		</property>
	</bean>

	<bean id="mongoBean" class="com.mongodb.Mongo">
		<constructor-arg name="host" value="${mongodb.host}" />
		<constructor-arg name="port" value="${mongodb.port}" />
	</bean>
</beans>